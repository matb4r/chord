random.seed 1234567890
simulation.cycles 1000
network.size 500

M 11
MAX_GROUP_SIZE 8
STABILITY_RESTRICTION 0.8

# control.shf Shuffle

protocol.chord example.staticgroups.StaticGroupsProtocol
{
		protocol chord
		idLength M
		maxGroupSize MAX_GROUP_SIZE
		stabilityRestriction STABILITY_RESTRICTION
}


init.create example.staticgroups.CreateInitialNodes
{
	protocol chord
	idLength M
	maxGroupSize MAX_GROUP_SIZE
    stabilityRestriction STABILITY_RESTRICTION
}

control.maintain example.staticgroups.StaticGroupsMaintainer
{
	step 1
}

control.metrics example.staticgroups.StaticGroupsMetrics
{
    cycles simulation.cycles
    networkInitSize network.size
	idLength M
	maxGroupSize MAX_GROUP_SIZE
	stabilityRestriction STABILITY_RESTRICTION
}

control.tests example.staticgroups.StaticGroupsTests
{
    test
}

control.dnet example.staticgroups.RandomDynamicNetwork
{
	add 1
	#substitute 1 # jesli add dodatni, to najpierw dodanie a potem odjecie
	random # przy random: add, substitute, minsize, maxsize nie maja znaczenia
	#minsize 2
	#maxsize 10
	#from 30
	#step 3
	init.0 example.staticgroups.StaticGroupsInitializer
	{
		protocol chord
		idLength M
		maxGroupSize MAX_GROUP_SIZE
		stabilityRestriction STABILITY_RESTRICTION
	}
}

